name: Cross-Platform Build

on:
  push:
    branches: [ '**' ]
    tags: [ '**' ]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Linux (Clang)"
            artifact_name: examples-linux-clang

          - name: "Windows (MinGW Cross-Compile)"
            artifact_name: examples-windows-mingw

    runs-on: ubuntu-latest

    env:
      CC: ${{ contains(matrix.name, 'Clang') && 'clang' || 'gcc' }}
      CXX: ${{ contains(matrix.name, 'Clang') && 'clang++' || 'g++' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies (Linux)
        run: |
          sudo apt-get update
            sudo apt-get install -y clang

      - name: Installing Dependencies (Windows)
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full
          
          WINLIBS_URL="https://github.com/brechtsanders/winlibs_mingw/releases/download/15.1.0posix-13.0.0-msvcrt-r3/winlibs-x86_64-posix-seh-gcc-15.1.0-mingw-w64msvcrt-13.0.0-r3.7z"
          
          wget -q -O mingw64.7z "$WINLIBS_URL"
          7z x mingw64.7z > /dev/null
          echo "$(pwd)/mingw64/bin" >> $GITHUB_PATH
          x86_64-w64-mingw32-g++ --version

      - name: Configure CMake
        run: |
          if [ "${{ matrix.name }}" == "Windows (MinGW Cross-Compile)" ]; then
            cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=cmake/windows-mingw-toolchain.cmake -DBUILD_EXAMPLES=ON
          else
            cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON
          fi

      - name: Build with CMake
        run: cmake --build build --config Release --parallel

      - name: Archive examples
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: build/bin/